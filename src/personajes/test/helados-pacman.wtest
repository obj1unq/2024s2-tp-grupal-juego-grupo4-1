import managers.levelManager.*
import wollok.game.*
import src.personajes.pacman.*
import src.managers.menuManager.*
import src.estados.estadosGame.*
import managers.posiciones.*
import comidas.helados.*
import escenarios.levels.levelPrueba.*
import managers.heladoManager.*
import managers.tickManager.*
import estados.estado.*
import escenarios.mapas.mapaDePrueba.*

describe "Pacman y los helados en el mapa de prueba"{


    method initialize(){
        levelManager.levelActual(levelPrueba)
        levelPrueba.mapa(mapaPrueba)
        game.addVisual(inicio)
        menuManager.pressEnter()
    }

    test "pacman come una helado comun en (4,1) y tiene 1000 puntos" {
        const heladoComun = heladoManager.heladoEn(game.at(3,1))
        assert.equals(0, levelManager.puntuacionLevel())
        pacman.cambioDireccion(derecha)
        pacman.moverse()
        heladoComun.colisionarConPacman()
        assert.equals(1000, levelManager.puntuacionLevel())
    }  
    
    test "pacman comiendo chocolate" {
        const helado = heladoManager.heladoEn(game.at(2,2))
        pacman.moverse()
        helado.colisionarConPacman()
        assert.equals(superPacman, pacman.estado())
        assert.equals(30, tickManager.velocidadPacman())
        assert.equals(160, tickManager.velocidadFantasmas())
        tickManager.modificarVelocidad(tickManager.velocidadFantasmasNormal(),tickManager.velocidadPacmanNormal())
        assert.equals(200, tickManager.velocidadFantasmas())
        assert.equals(100, tickManager.velocidadPacman())
    }

    test "pacman comiendo balde de helado"{
        pacman.position(game.at(13,1))
        const helado = heladoManager.heladoEn(game.at(13,1))
        const tempPosition = pacman.position()
        assert.equals(0, levelManager.puntuacionLevel())
        helado.colisionarConPacman()
        assert.equals(1000, levelManager.puntuacionLevel())
        assert.notEquals(tempPosition, pacman.position( ))
    }

    test "pacman comiendo crema del cielo"{
        pacman.position(game.at(14,1))
        const crema = heladoManager.heladoEn(game.at(14,1))
        assert.equals(200, tickManager.velocidadFantasmas())
        assert.equals(100, tickManager.velocidadPacman())
        crema.colisionarConPacman()
        assert.equals(250, tickManager.velocidadPacman())
        assert.equals(50, tickManager.velocidadFantasmas())
        tickManager.modificarVelocidad(tickManager.velocidadFantasmasNormal(),tickManager.velocidadPacmanNormal())
        assert.equals(200, tickManager.velocidadFantasmas())
        assert.equals(100, tickManager.velocidadPacman())
    }
}

